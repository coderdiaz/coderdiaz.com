---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import { motion } from 'framer-motion';
import Container from './Container.astro';

interface Props {
  entry: CollectionEntry<'work'>;
  showServices?: boolean;
}

const { entry, showServices = false } = Astro.props;
---
<section class="project border-b border-tones-200 hover:bg-accent-50/25 overflow-hidden group transition-all">
  <a href={`/${entry.slug}/`} target="_self">
    <Container class="md:px-0">
      <div class="pt-10 md:pt-16 flex flex-col gap-0">
        <div class="flex flex-col gap-5 md:px-10">
          { entry.data.tag && (
            <motion.span
              client:load
              initial={{opacity:0,y:-20}}
              animate={{opacity:1,y:0}}
              transition={{ type: 'spring', stiffness: 250, damping: 20, delay: 0.2 }}
              className="inline max-w-max px-3 py-0.5 border-2 border-black rounded-full font-semibold text-sm text-gray-1100">
              {entry.data.tag}
            </motion.span>
          ) }
          <div class="flex flex-col gap-2 md:w-[34rem]">
            <motion.h3
              client:load
              initial={{opacity:0, y:-20}}
              animate={{opacity:1, y:0}}
              transition={{ type: 'spring', stiffness: 250, damping: 20, delay: 0.25 }}
              className="text-2xl md:text-3xl font-bold">{entry.data.title}</motion.h3>
            <motion.p
              client:load
              initial={{opacity:0, y:-20}}
              animate={{opacity:1, y:0}}
              transition={{ type: 'spring', stiffness: 250, damping: 20, delay: 0.3 }}
              className="font-medium text-gray-600">
              {entry.data.description}
            </motion.p>
          </div>
          {(entry.data.services.length > 0 && showServices) && (
            <motion.div
              client:load
              initial={{opacity:0, y:-20}}
              animate={{opacity:1, y:0}}
              transition={{ type: 'spring', stiffness: 250, damping: 20, delay: 0.35 }}
              className="flex items-center gap-3 flex-wrap z-10 mb-6">
              {entry.data.services.map((service: any) => (
                <span class="inline max-w-max px-3 py-1 md:py-1.5  border border-gray-20 rounded-full font-semibold text-sm bg-white">
                  {service}
                </span>
              ))}
            </motion.div>
          )}
        </div>
        { entry.data.featuredImage && (
          <motion.div
            client:load
            initial={{opacity:0,y:-20}}
            animate={{opacity:1,y:0}}
            transition={{ type: 'spring', stiffness: 250, damping: 20, delay: 0.4 }}
          >
            <Image
              class="mt-4 md:mt-0 w-full pointer-events-none select-none group-hover:scale-[1.03] transition-transform duration-300 ease-in-out"
              src={entry.data.featuredImage as ImageMetadata}
              alt={entry.data.tag}
              loading="eager"
            />
          </motion.div>
        )}
      </div>
    </Container>
  </a>
</section>